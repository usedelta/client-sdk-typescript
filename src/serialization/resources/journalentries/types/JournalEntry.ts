/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as DeltaApi from "../../../../api";
import * as core from "../../../../core";

export const JournalEntry: core.serialization.ObjectSchema<serializers.JournalEntry.Raw, DeltaApi.JournalEntry> =
    core.serialization.object({
        id: core.serialization.lazy(async () => (await import("../../..")).JournalEntryId),
        connectionId: core.serialization.property("connection_id", core.serialization.string()),
        journalId: core.serialization.property("journal_id", core.serialization.string()),
        description: core.serialization.string(),
        transactionDate: core.serialization.property("transaction_date", core.serialization.date()),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date()),
        currency: core.serialization.string(),
        lineItems: core.serialization.property(
            "line_items",
            core.serialization.list(
                core.serialization.lazyObject(async () => (await import("../../..")).JournalEntryLineItem)
            )
        ),
    });

export declare namespace JournalEntry {
    interface Raw {
        id: serializers.JournalEntryId.Raw;
        connection_id: string;
        journal_id: string;
        description: string;
        transaction_date: string;
        created_at: string;
        updated_at: string;
        currency: string;
        line_items: serializers.JournalEntryLineItem.Raw[];
    }
}
