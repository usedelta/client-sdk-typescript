/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as DeltaApi from "../../../../api";
import * as core from "../../../../core";

export const Account: core.serialization.ObjectSchema<serializers.Account.Raw, DeltaApi.Account> =
    core.serialization.object({
        id: core.serialization.lazy(async () => (await import("../../..")).AccountId),
        connectionId: core.serialization.property("connection_id", core.serialization.string()),
        accountId: core.serialization.property("account_id", core.serialization.string()),
        category: core.serialization.lazy(async () => (await import("../../..")).AccountCategory),
        type: core.serialization.lazy(async () => (await import("../../..")).AccountType),
        status: core.serialization.lazy(async () => (await import("../../..")).AccountStatus),
        nominalCode: core.serialization.property("nominal_code", core.serialization.string()),
        name: core.serialization.string(),
        description: core.serialization.string(),
        balance: core.serialization.number(),
        currency: core.serialization.string(),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date()),
    });

export declare namespace Account {
    interface Raw {
        id: serializers.AccountId.Raw;
        connection_id: string;
        account_id: string;
        category: serializers.AccountCategory.Raw;
        type: serializers.AccountType.Raw;
        status: serializers.AccountStatus.Raw;
        nominal_code: string;
        name: string;
        description: string;
        balance: number;
        currency: string;
        created_at: string;
        updated_at: string;
    }
}
