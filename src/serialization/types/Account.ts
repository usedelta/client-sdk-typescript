/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as DeltaApi from "../../api";
import * as core from "../../core";

export const Account: core.serialization.ObjectSchema<serializers.Account.Raw, DeltaApi.Account> =
    core.serialization.object({
        id: core.serialization.lazy(async () => (await import("..")).AccountId).optional(),
        connectionId: core.serialization.property("connection_id", core.serialization.string().optional()),
        accountId: core.serialization.property("account_id", core.serialization.string()),
        category: core.serialization.lazy(async () => (await import("..")).AccountCategory).optional(),
        type: core.serialization.lazy(async () => (await import("..")).AccountType).optional(),
        status: core.serialization.lazy(async () => (await import("..")).AccountStatus).optional(),
        nominalCode: core.serialization.property("nominal_code", core.serialization.string().optional()),
        name: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        balance: core.serialization.number().optional(),
        currency: core.serialization.string().optional(),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.string().optional()),
    });

export declare namespace Account {
    interface Raw {
        id?: serializers.AccountId.Raw | null;
        connection_id?: string | null;
        account_id: string;
        category?: serializers.AccountCategory.Raw | null;
        type?: serializers.AccountType.Raw | null;
        status?: serializers.AccountStatus.Raw | null;
        nominal_code?: string | null;
        name?: string | null;
        description?: string | null;
        balance?: number | null;
        currency?: string | null;
        created_at?: string | null;
        updated_at?: string | null;
    }
}
