/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as DeltaApi from "../../api";
import * as core from "../../core";

export const Invoice: core.serialization.ObjectSchema<serializers.Invoice.Raw, DeltaApi.Invoice> =
    core.serialization.object({
        id: core.serialization.lazy(async () => (await import("..")).InvoiceId).optional(),
        connectionId: core.serialization.property("connection_id", core.serialization.string().optional()),
        platformId: core.serialization.property("platform_id", core.serialization.string().optional()),
        balance: core.serialization.string().optional(),
        booked: core.serialization.boolean().optional(),
        cancelled: core.serialization.boolean().optional(),
        currency: core.serialization.string().optional(),
        currencyRate: core.serialization.property("currency_rate", core.serialization.string().optional()),
        currencyUnit: core.serialization.property("currency_unit", core.serialization.string().optional()),
        customerName: core.serialization.property("customer_name", core.serialization.string().optional()),
        customerNumber: core.serialization.property("customer_number", core.serialization.string().optional()),
        dueDate: core.serialization.property("due_date", core.serialization.string().optional()),
        externalInvoiceReference1: core.serialization.property(
            "external_invoice_reference_1",
            core.serialization.string().optional()
        ),
        externalInvoiceReference2: core.serialization.property(
            "external_invoice_reference_2",
            core.serialization.string().optional()
        ),
        invoiceDate: core.serialization.property("invoice_date", core.serialization.string().optional()),
        invoiceType: core.serialization.property("invoice_type", core.serialization.string().optional()),
        journalId: core.serialization.property("journal_id", core.serialization.string().optional()),
        journalSeries: core.serialization.property("journal_series", core.serialization.string().optional()),
        wayOfDelivery: core.serialization.property("way_of_delivery", core.serialization.string().optional()),
        sent: core.serialization.boolean().optional(),
        total: core.serialization.string().optional(),
        duePaymentDate: core.serialization.property("due_payment_date", core.serialization.string().optional()),
        lineItems: core.serialization.property(
            "line_items",
            core.serialization
                .list(core.serialization.lazyObject(async () => (await import("..")).InvoiceLineItemsItem))
                .optional()
        ),
    });

export declare namespace Invoice {
    interface Raw {
        id?: serializers.InvoiceId.Raw | null;
        connection_id?: string | null;
        platform_id?: string | null;
        balance?: string | null;
        booked?: boolean | null;
        cancelled?: boolean | null;
        currency?: string | null;
        currency_rate?: string | null;
        currency_unit?: string | null;
        customer_name?: string | null;
        customer_number?: string | null;
        due_date?: string | null;
        external_invoice_reference_1?: string | null;
        external_invoice_reference_2?: string | null;
        invoice_date?: string | null;
        invoice_type?: string | null;
        journal_id?: string | null;
        journal_series?: string | null;
        way_of_delivery?: string | null;
        sent?: boolean | null;
        total?: string | null;
        due_payment_date?: string | null;
        line_items?: serializers.InvoiceLineItemsItem.Raw[] | null;
    }
}
